// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#pragma once
#include "winrt/test_component_base.h"
namespace winrt::test_component_base::implementation
{
    template <typename D, typename B, typename... I>
    struct __declspec(empty_bases) HierarchyB_base : implements<D, test_component_base::HierarchyB, composable, B, no_module_lock, I...>
    {
        using base_type = HierarchyB_base;
        using class_type = test_component_base::HierarchyB;
        using implements_type = typename HierarchyB_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"test_component_base.HierarchyB";
        }
    };
}
namespace winrt::test_component_base::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) HierarchyBT : implements<D, Windows::Foundation::IActivationFactory, test_component_base::IHierarchyBFactory, I...>
    {
        using instance_type = test_component_base::HierarchyB;

        hstring GetRuntimeClassName() const
        {
            return L"test_component_base.HierarchyB";
        }
        auto CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface)
        {
            return impl::composable_factory<T>::template CreateInstance<test_component_base::HierarchyB>(baseInterface, innerInterface);
        }
        auto CreateInstance2(hstring const& name, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface)
        {
            return impl::composable_factory<T>::template CreateInstance<test_component_base::HierarchyB>(baseInterface, innerInterface, name);
        }
        [[noreturn]] Windows::Foundation::IInspectable ActivateInstance() const
        {
            throw hresult_not_implemented();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_HIERARCHYB_XAML_G_H) || __has_include("HierarchyB.xaml.g.h")
#include "HierarchyB.xaml.g.h"
#else

namespace winrt::test_component_base::implementation
{
    template <typename D, typename... I>
    using HierarchyBT = HierarchyB_base<D, I...>;
}

#endif
