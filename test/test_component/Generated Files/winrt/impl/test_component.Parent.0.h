// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#ifndef WINRT_test_component_Parent_0_H
#define WINRT_test_component_Parent_0_H
WINRT_EXPORT namespace winrt::test_component::Parent
{
    struct ParentStruct;
}
namespace winrt::impl
{
    template <> struct category<test_component::Parent::ParentStruct>{ using type = struct_category<int32_t>; };
    template <> inline constexpr auto& name_v<test_component::Parent::ParentStruct>{ L"test_component.Parent.ParentStruct" };
#ifndef WINRT_LEAN_AND_MEAN
#endif
    struct struct_test_component_Parent_ParentStruct
    {
        int32_t Value;
    };
    template <> struct abi<test_component::Parent::ParentStruct>
    {
        using type = struct_test_component_Parent_ParentStruct;
    };
}
#endif
