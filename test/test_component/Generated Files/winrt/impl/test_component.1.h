// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#ifndef WINRT_test_component_1_H
#define WINRT_test_component_1_H
#include "winrt/impl/test_component.0.h"
WINRT_EXPORT namespace winrt::test_component
{
    struct __declspec(empty_bases) IClass :
        Windows::Foundation::IInspectable,
        impl::consume_t<IClass>
    {
        IClass(std::nullptr_t = nullptr) noexcept {}
        IClass(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IClassFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IClassFactory>
    {
        IClassFactory(std::nullptr_t = nullptr) noexcept {}
        IClassFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IClassStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IClassStatics>
    {
        IClassStatics(std::nullptr_t = nullptr) noexcept {}
        IClassStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IDeferrableEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IDeferrableEventArgs>
    {
        IDeferrableEventArgs(std::nullptr_t = nullptr) noexcept {}
        IDeferrableEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISimple :
        Windows::Foundation::IInspectable,
        impl::consume_t<ISimple>
    {
        ISimple(std::nullptr_t = nullptr) noexcept {}
        ISimple(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
