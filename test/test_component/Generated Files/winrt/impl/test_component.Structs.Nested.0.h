// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#ifndef WINRT_test_component_Structs_Nested_0_H
#define WINRT_test_component_Structs_Nested_0_H
WINRT_EXPORT namespace winrt::test_component::Structs
{
    struct Inner;
}
WINRT_EXPORT namespace winrt::test_component::Structs::Nested
{
    struct Outer;
}
namespace winrt::impl
{
    template <> struct category<test_component::Structs::Nested::Outer>{ using type = struct_category<test_component::Structs::Inner, int32_t>; };
    template <> inline constexpr auto& name_v<test_component::Structs::Nested::Outer>{ L"test_component.Structs.Nested.Outer" };
#ifndef WINRT_LEAN_AND_MEAN
#endif
    struct struct_test_component_Structs_Nested_Outer
    {
        struct{ int32_t InnerValue; } Depends;
        int32_t OuterValue;
    };
    template <> struct abi<test_component::Structs::Nested::Outer>
    {
        using type = struct_test_component_Structs_Nested_Outer;
    };
}
#endif
