// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#ifndef WINRT_test_component_Structs_2_H
#define WINRT_test_component_Structs_2_H
#include "winrt/impl/Windows.Foundation.Numerics.2.h"
#include "winrt/impl/test_component.Structs.1.h"
WINRT_EXPORT namespace winrt::test_component::Structs
{
    struct All
    {
        Windows::Foundation::Numerics::float3x2 A;
        Windows::Foundation::Numerics::float4x4 B;
        Windows::Foundation::Numerics::plane C;
        Windows::Foundation::Numerics::quaternion D;
        Windows::Foundation::Numerics::float2 E;
        Windows::Foundation::Numerics::float3 F;
        Windows::Foundation::Numerics::float4 G;
        winrt::guid H;
    };
    inline bool operator==(All const& left, All const& right) noexcept
    {
        return left.A == right.A && left.B == right.B && left.C == right.C && left.D == right.D && left.E == right.E && left.F == right.F && left.G == right.G && left.H == right.H;
    }
    inline bool operator!=(All const& left, All const& right) noexcept
    {
        return !(left == right);
    }
    struct Inner
    {
        int32_t InnerValue;
    };
    inline bool operator==(Inner const& left, Inner const& right) noexcept
    {
        return left.InnerValue == right.InnerValue;
    }
    inline bool operator!=(Inner const& left, Inner const& right) noexcept
    {
        return !(left == right);
    }
}
#endif
