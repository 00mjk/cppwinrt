// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.3.4.5

#pragma once
#include "winrt/test_component.Velocity.h"
namespace winrt::test_component::Velocity::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) Class4_base : implements<D, test_component::Velocity::Class4, test_component::Velocity::IInterface2, I...>
    {
        using base_type = Class4_base;
        using class_type = test_component::Velocity::Class4;
        using implements_type = typename Class4_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"test_component.Velocity.Class4";
        }
    };
}
namespace winrt::test_component::Velocity::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) Class4T : implements<D, Windows::Foundation::IActivationFactory, test_component::Velocity::IClass4Factory2, test_component::Velocity::IClass4Statics2, I...>
    {
        using instance_type = test_component::Velocity::Class4;

        hstring GetRuntimeClassName() const
        {
            return L"test_component.Velocity.Class4";
        }
        auto ActivateInstance() const
        {
            return make<T>();
        }
        auto CreateInstance(int32_t one, int32_t two)
        {
            return make<T>(one, two);
        }
        auto Class4_Static2()
        {
            return T::Class4_Static2();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_CLASS4_XAML_G_H) || __has_include("Velocity.Class4.xaml.g.h")
#include "Velocity.Class4.xaml.g.h"
#else

namespace winrt::test_component::Velocity::implementation
{
    template <typename D, typename... I>
    using Class4T = Class4_base<D, I...>;
}

#endif
